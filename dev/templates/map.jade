extends _layout
block vars
	- var bodyClass = 'blog'
block content
	main.main-content.cf
		.container
			.main-content__inner
				.map-area
					#map
					








block inlineScripts
	script.
		ymaps.ready(init);

		function init () {
			var myMap = new ymaps.Map("map", {
				center: [55.6938,37.6001],
				zoom: 5,
				controls: [],
			}); 
			var myGeoObjects = [];

			myGeoObjects[0] = new ymaps.Placemark([55.6740,37.7333],{
				clusterCaption: 'Moscow', 
				//balloonContentBody: 'Текст в балуне',
				},{
				// Необходимо указать данный тип макета.
				iconLayout: 'default#image',
				iconImageHref: 'img/map-green.png',
				// Размеры метки.
				iconImageSize: [28, 42],
				// Смещение левого верхнего угла иконки относительно
				// её «ножки» (точки привязки).
				//- iconImageOffset: [-3, -42]
			});

			myGeoObjects[1] = new ymaps.Placemark([55.6990,37.7377],{
				clusterCaption: 'Moscow', 
				//balloonContentBody: 'Текст в балуне',
				},{
				// Необходимо указать данный тип макета.
				iconLayout: 'default#image',
				iconImageHref: 'img/map-green.png',
				// Размеры метки.
				iconImageSize: [28, 42],
				// Смещение левого верхнего угла иконки относительно
				// её «ножки» (точки привязки).
				//- iconImageOffset: [-23, -42]
			});


			myGeoObjects[2] = new ymaps.Placemark([56.299278725518555,43.99715184918819],{
				clusterCaption: 'Gorky', 
				//balloonContentBody: 'Текст в балуне',
				},{
				// Необходимо указать данный тип макета.
				iconLayout: 'default#image',
				iconImageHref: 'img/map-green.png',
				// Размеры метки.
				iconImageSize: [28, 42],
				// Смещение левого верхнего угла иконки относительно
				// её «ножки» (точки привязки).
				//- iconImageOffset: [-3, -42]
			});

			myGeoObjects[3] = new ymaps.Placemark([56.30080581135179,43.92574071637571],{
				clusterCaption: 'Gorky', 
				//- balloonContentBody: 'Текст в балуне',
				},{
				iconLayout: 'default#image',
				iconImageHref: 'img/map-green.png',
				iconImageSize: [28, 42],
			});

			var clusterIcons=[{
				href:'/images/pointer.png',
				size:[31,40],
				offset:[0,0]
			}];

			clusterer = new ymaps.Clusterer();

			clusterer.createCluster = function(center, geoObjects) {
				var cluster = ymaps.Clusterer.prototype.createCluster.call(this, center, geoObjects);
				cluster.properties.set({
					//- city: 'Москва'
				});
				cluster.events.add('click', function(e) {
					//console.log(cluster.properties._data.city)
					var x = cluster.properties._data.geoObjects[0].properties._data.clusterCaption;
					window.location.hash = x;
				});
				return cluster;
			};


			//- var clusterer = new ymaps.Clusterer({
			//- 	clusterDisableClickZoom: false,
			//- 	clusterOpenBalloonOnClick: false,
			//- 	//- clusterIcons:clusterIcons,
			//- 	// Устанавливаем стандартный макет балуна кластера "Карусель".
			//- 	clusterBalloonContentLayout: 'cluster#balloonCarousel',
			//- 	// Устанавливаем собственный макет.
			//- 	//clusterBalloonItemContentLayout: customItemContentLayout,
			//- 	// Устанавливаем режим открытия балуна. 
			//- 	// В данном примере балун никогда не будет открываться в режиме панели.
			//- 	clusterBalloonPanelMaxMapArea: 0,
			//- 	// Устанавливаем размеры макета контента балуна (в пикселях).
			//- 	clusterBalloonContentLayoutWidth: 300,
			//- 	clusterBalloonContentLayoutHeight: 200,
			//- 	// Устанавливаем максимальное количество элементов в нижней панели на одной странице
			//- 	clusterBalloonPagerSize: 5,
			//- 	// Настройка внешего вида нижней панели.
			//- 	// Режим marker рекомендуется использовать с небольшим количеством элементов.
			//- 	// clusterBalloonPagerType: 'marker',
			//- 	// Можно отключить зацикливание списка при навигации при помощи боковых стрелок.
			//- 	// clusterBalloonCycling: false,
			//- 	// Можно отключить отображение меню навигации.
			//- 	// clusterBalloonPagerVisible: false
			//- });

			
			clusterer.add(myGeoObjects);
			myMap.geoObjects.add(clusterer);
		}